name: PR
on: pull_request
jobs:
  end2end:
    name: End To End
    runs-on: ubuntu-latest
    strategy:
      matrix:
        isUpgrade: [true, false]
        include:
          - isUpgrade: true
            ref: main
    timeout-minutes: 20
    defaults:
      run:
        working-directory: ./src/github.com/${{ github.repository }}
    env:
      GOPATH: ${{ github.workspace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}
          ref: ${{ matrix.ref }}
      - name: Fetch tags
        run: |
          pwd
          git fetch --prune --unshallow
      - name: Helm Lint
        run: |
          mkdir -p ~/.kube
          make helm-lint
      - uses: helm/kind-action@v1.0.0
        with:
          config: ./src/github.com/${{ github.repository }}/test/kind.yaml
      - name: Deploy charts
        timeout-minutes: 5
        run: |
          kubectl cluster-info
          make deploy-cert-manager deploy-ingress-nginx
      - name: Install konk-operator
        if: ${{ matrix.isUpgrade }}
        timeout-minutes: 6
        run: |
          make kind-load-konk KIND_NAME="chart-testing"
          make deploy-konk-operator

          kubectl create -f examples/konk.yaml
          until kubectl wait --timeout=3m --for=condition=ready pod -l app.kubernetes.io/component=apiserver,app.kubernetes.io/name=konk
          do
            sleep 1
          done
      - name: Checkout code
        if: ${{ matrix.isUpgrade }}
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}
      - name: Fetch tags
        if: ${{ matrix.isUpgrade }}
        run: |
          pwd
          git fetch --prune --unshallow
      - name: Install/Upgrade konk-operator
        timeout-minutes: 6
        run: |
          make kind-load-konk KIND_NAME="chart-testing"
          make deploy-konk-operator

          kubectl apply -f examples/konk.yaml
          until kubectl wait --timeout=3m --for=condition=ready pod -l app.kubernetes.io/component=apiserver,app.kubernetes.io/name=konk
          do
            sleep 1
          done
          helm list
          make test-konk
          make test-konk-local
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - name: Test Extension APIServer
        timeout-minutes: 3
        run: |
          # deploy example-apiserver using a passed KONK reference
          make deploy-apiserver KIND_NAME="chart-testing" KONK_NAME="runner-konk"
          POD_NAME=$(kubectl get pod -o name -l app.kubernetes.io/name=konk-service )
          until kubectl exec -it $POD_NAME -- kubectl get contact
          do
            kubectl exec -it $POD_NAME -- kubectl describe apiservice v1alpha1.example.infoblox.com
            sleep 3
          done
          make test-apiserver
          # Test konkservice deployed
          make test-apiserver-api
      - name: Test ingress
        timeout-minutes: 1
        run: |
          kubectl -n ingress-nginx logs -l app.kubernetes.io/component=controller --tail 0 -f &
          until kubectl -s localhost:80 get contacts
          do
            sleep 3
          done
      - name: Print failure
        timeout-minutes: 1
        if: ${{ failure() }}
        run: |
          git diff
          kubectl describe po,ing
          kubectl get po,svc,ep,certificate,issuer,ingress,secrets,configmap
