name: PR
on: pull_request
jobs:
  end2end:
    name: End To End
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        isUpgrade: [true, false]
        include:
          - isUpgrade: true
            ref: main
        k8sVersion:
          - v1.21.1
          - v1.20.7
          - v1.19.11
          - v1.18.19
          - v1.17.17
    timeout-minutes: 20
    defaults:
      run:
        shell: bash -ex -o pipefail {0}
        working-directory: ./src/github.com/${{ github.repository }}
    env:
      GOPATH: ${{ github.workspace }}
      KONK_NAMESPACE: baz
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}
          ref: ${{ matrix.ref }}
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ${{ github.workspace }}/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.isUpgrade }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Fetch tags
        run: |
          git fetch --prune --unshallow
      - name: Helm Lint
        run: |
          mkdir -p ~/.kube
          make helm-lint
      - uses: helm/kind-action@v1.1.0
        timeout-minutes: 5
        with:
          config: ./src/github.com/${{ github.repository }}/test/kind.yaml
          node_image: kindest/node:${{ matrix.k8sVersion }}
          version: v0.11.1
      - name: Deploy charts
        timeout-minutes: 2
        run: |
          kubectl cluster-info
          make deploy-cert-manager deploy-ingress-nginx
      - name: Install konk-operator
        if: ${{ matrix.isUpgrade }}
        timeout-minutes: 6
        run: |
          make kind-load-konk KIND_NAME="chart-testing"
          make deploy-konk-operator
          kubectl create ns $KONK_NAMESPACE || true
          kubectl create -n $KONK_NAMESPACE -f examples/konk.yaml
          until kubectl wait -n $KONK_NAMESPACE --timeout=3m --for=condition=ready pod -l app.kubernetes.io/component=apiserver,app.kubernetes.io/name=konk
          do
            sleep 1
          done
      - name: Checkout code
        if: ${{ matrix.isUpgrade }}
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}
      - name: Fetch tags
        if: ${{ matrix.isUpgrade }}
        run: |
          git fetch --prune --unshallow
      - name: Install/Upgrade konk-operator
        timeout-minutes: 3
        run: |
          make kind-load-konk KIND_NAME="chart-testing"
          make deploy-crds deploy-konk-operator
      - name: Test Konk
        timeout-minutes: 6
        run: |
          kubectl create ns $KONK_NAMESPACE || true
          kubectl apply -n $KONK_NAMESPACE -f examples/konk.yaml
          # FIXME: use the helm-operator status to detect installation was successful
          until kubectl wait -n $KONK_NAMESPACE --timeout=3m --for=condition=ready pod -l app.kubernetes.io/component=apiserver,app.kubernetes.io/name=konk
          do
            sleep 1
          done
          make test-konk KONK_NAMESPACE=$KONK_NAMESPACE
          make test-konk-local
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - name: Build Extension APIServer
        timeout-minutes: 7
        run: |
          make kind-load-apiserver KIND_NAME="chart-testing"
      - name: Deploy Extension APIServer
        timeout-minutes: 4
        run: |
          # deploy example-apiserver using a passed KONK reference
          make deploy-example-apiserver KIND_NAME="chart-testing" \
            HELM_SETFLAGS="--set=konk.name=runner-konk --set=konk.namespace=$KONK_NAMESPACE --set=konk.create=false --set=image.pullPolicy=IfNotPresent"

          POD_NAME=$(kubectl get pod -o name -l app.kubernetes.io/name=konk-service,app.kubernetes.io/component=apiservice )
          until kubectl exec -it $POD_NAME -- kubectl get contact
          do
            kubectl exec -it $POD_NAME -- kubectl describe apiservice v1alpha1.example.infoblox.com
            sleep 3
          done
      - name: Test Extension APIServer
        run: |
          make test-apiserver
          # Test konkservice deployed
          make test-apiserver-konk-service
          kubectl wait --timeout=1m --for=condition=ready pod -l app.kubernetes.io/name=konk-service,app.kubernetes.io/component=apiservice-test
      - name: Test ingress
        timeout-minutes: 1
        run: |
          kubectl -n ingress-nginx logs -l app.kubernetes.io/component=controller --tail 0 -f &
          until kubectl -s localhost:80 get contacts
          do
            sleep 3
          done
      - name: Test delete
        timeout-minutes: 1
        run: |
          helm list --all-namespaces
          kubectl delete konks,konkservices --all --all-namespaces
          [ -z "$(helm list --all-namespaces --filter '^runner-.*konk(-service)?$' | tee /dev/stderr | grep konk)" ]
      - name: Print failure
        if: ${{ failure() }}
        run: |
          git diff
          helm list
          kubectl describe po,ing,certificate,clusterissuer,issuer,konk,konkservice -A
          kubectl get po,rs,svc,ep,certificate,clusterissuer,issuer,ingress,secrets,configmap -A
          kubectl logs -l app.kubernetes.io/component=apiservice -n $KONK_NAMESPACE
          kubectl logs -l app.kubernetes.io/name=konk-operator
          kubectl logs -l component=controller,app.kubernetes.io/name=example-apiserver
          kubectl logs -l component=apiserver,app.kubernetes.io/name=example-apiserver -c example-apiserver
