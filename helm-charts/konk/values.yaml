# Default values for konk.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

apiserver:
  image:
    repository: k8s.gcr.io/kube-apiserver
    pullPolicy: Always
    # -- Overrides the image tag
    # @default -- default is the chart appVersion.
    tag: ""
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 20m
      memory: 160Mi
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  startupProbe: true
  remoteHeaders:
    # -- sets kube-apiserver's `--requestheader-extra-headers-prefix` option.
    # See https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/ for details.
    requestheader-extra-headers-prefix: X-Remote-Extra-
    # -- sets kube-apiserver's `--requestheader-group-headers` option.
    requestheader-group-headers: X-Remote-Group
    # -- sets kube-apiserver's `--requestheader-username-headers` option.
    requestheader-username-headers: X-Remote-User
  # -- additional command line flags for kube-apiserver.
  # See https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/ for details.
  extraFlags: {}
  # -- specifies APIs unavailable in Konk.
  disabledAPIs:
    - apps/v1
    - apps/v1beta1
    - autoscaling/v1
    - autoscaling/v2beta1
    - autoscaling/v2beta2
    - batch/v1
    - batch/v1beta1
    - networking.k8s.io/v1
    - networking.k8s.io/v1beta1
    - storage.k8s.io/v1
    - storage.k8s.io/v1beta1

certManager:
  # When using cluster-scoped konks, the cert-manager namespace must be provided.
  # Konk will create CA secrets for use by ClusterIssuers in cert-manager's namespace.
  namespace:

etcd:
  # only override "image:" when "operator: false"
  # image:
  #   repository: k8s.gcr.io/etcd
  #   pullPolicy: Always
  #   tag: "3.4.9-1" # keep image versions in sync with `kubeadm config images list`
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 10m
      memory: 64Mi
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # -- defines how Konk's internal etcd is deployed.
  # `true`: etcd is deployed by konk-operator
  # `false`: etcd is deployed as a sidecar of konk's kube-apiserver
  operator: true
  statefulset:
    replicaCount: 3

kind:
  image:
    repository: kindest/node
    pullPolicy: Always
    # -- Overrides the image tag
    # @default -- default is the chart appVersion.
    tag: ""
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- scope can be `cluster` or `namespace`.
# When scope is `cluster`, Certificates in any namespace can be signed by the konk's Issuer.
scope: namespace

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

space:
  enabled: false

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

service:
  type: ClusterIP
  port: 6443

ingress:
  enabled: false
  className: ""
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
