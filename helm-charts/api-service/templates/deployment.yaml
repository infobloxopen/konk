apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-service.fullname" . }}-kubectl
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "api-service.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "api-service.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: apiservice
  template:
    metadata:
      labels:
        {{- include "api-service.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: apiservice
    spec:
      serviceAccountName: {{ include "api-service.serviceAccountName" . }}
      initContainers:
      - name: kind
        securityContext:
          {{- toYaml .Values.kind.securityContext | nindent 10 }}
        image: "{{ .Values.kind.image.repository }}:{{ .Values.kind.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.kind.image.pullPolicy }}
        command:
          - bash
        resources:
          {{- toYaml .Values.kind.resources | nindent 10 }}
        volumeMounts:
        - name: kubeconfig
          mountPath: "/etc/kubernetes"
          readOnly: true
        - name: ca-cert
          mountPath: "certs"
          readOnly: true
      containers:
      - name: done
        securityContext:
          {{- toYaml .Values.kind.securityContext | nindent 10 }}
        image: "{{ .Values.kind.image.repository }}:{{ .Values.kind.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.kind.image.pullPolicy }}
        command:
          - sleep
          - infinity
      volumes:
      - name: kubeconfig
        secret:
          secretName: {{ .Values.konk.name }}-kubeconfig
      - name: ca-cert
        secret:
          secretName: {{ include "api-service.fullname" . }}-server
