apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "example-apiserver.fullname" . }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "example-apiserver.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "example-apiserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "example-apiserver.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "example-apiserver.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: controller
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - "./controller-manager"
          args:
          - "-v=10"
          env:
          - name: KUBECONFIG
            value: /etc/kubernetes/admin.conf
          resources:
            {{- toYaml .Values.manager.resources | nindent 12 }}
          volumeMounts:
          - name: kubeconfig
            mountPath: "/etc/kubernetes"
            readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: kubeconfig
        secret:
          secretName: {{ .Values.konk.name | required "must specify konk.name" }}-kubeconfig
