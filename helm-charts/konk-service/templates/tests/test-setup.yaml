apiVersion: v1
kind: Pod
metadata:
  name: {{ include "konk-service.fullname" . }}-test
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "konk-service.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook": test
spec:
  containers:
  - name: kubectl
    image: {{ .Values.kind.image.repository }}:{{ .Values.kind.image.tag }}
    command:
    - /bin/bash
    - -cx
    env:
    - name: KUBECONFIG
      value: /kubeconfig/admin.conf
    args:
    - |
      # https://kubernetes.io/docs/setup/best-practices/certificates/#configure-certificates-for-user-accounts
      kubectl config set-cluster {{ .Values.konk.name }} \
        --server=https://{{ include "konk-service.konkfqdn" . }}:6443 \
        --certificate-authority /tmp/certs/ca.crt \
        --embed-certs
      kubectl config set-credentials kubernetes-admin \
        --client-certificate /tmp/certs/tls.crt \
        --client-key /tmp/certs/tls.key \
        --embed-certs
      kubectl config set-context {{ .Values.konk.name }} --cluster {{ .Values.konk.name }} --user kubernetes-admin
      kubectl config use-context {{ .Values.konk.name }}

      kubectl auth can-i create apiservice
      kubectl auth can-i create crd
      {{- range .Values.group.kinds }}
      until kubectl get {{ . }}.{{ $.Values.group.name}}
      do
      sleep 3s
      done
      {{- end }}

    volumeMounts:
    - name: kubeconfig
      mountPath: /kubeconfig
    - name: kubeconfig-cert
      mountPath: /tmp/certs
      readOnly: true
  restartPolicy: Never
  volumes:
  - name: kubeconfig
    emptyDir: {}
  - name: kubeconfig-cert
    secret:
      secretName: {{ include "konk-service.fullname" . }}-kubeconfig
