// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/infobloxopen/konk/test/apiserver/pkg/apis/contact/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ContactLister helps list Contacts.
type ContactLister interface {
	// List lists all Contacts in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Contact, err error)
	// Contacts returns an object that can list and get Contacts.
	Contacts(namespace string) ContactNamespaceLister
	ContactListerExpansion
}

// contactLister implements the ContactLister interface.
type contactLister struct {
	indexer cache.Indexer
}

// NewContactLister returns a new ContactLister.
func NewContactLister(indexer cache.Indexer) ContactLister {
	return &contactLister{indexer: indexer}
}

// List lists all Contacts in the indexer.
func (s *contactLister) List(selector labels.Selector) (ret []*v1alpha1.Contact, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Contact))
	})
	return ret, err
}

// Contacts returns an object that can list and get Contacts.
func (s *contactLister) Contacts(namespace string) ContactNamespaceLister {
	return contactNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ContactNamespaceLister helps list and get Contacts.
type ContactNamespaceLister interface {
	// List lists all Contacts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Contact, err error)
	// Get retrieves the Contact from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Contact, error)
	ContactNamespaceListerExpansion
}

// contactNamespaceLister implements the ContactNamespaceLister
// interface.
type contactNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Contacts in the indexer for a given namespace.
func (s contactNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Contact, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Contact))
	})
	return ret, err
}

// Get retrieves the Contact from the indexer for a given namespace and name.
func (s contactNamespaceLister) Get(name string) (*v1alpha1.Contact, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("contact"), name)
	}
	return obj.(*v1alpha1.Contact), nil
}
